<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Note on Jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/categories/note/</link><description>Recent content in Note on Jackson.tmm</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Sun, 01 Dec 2024 22:25:45 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/categories/note/rss.xml" rel="self" type="application/rss+xml"/><item><title>[筆記] 淺談資料庫事務(Transcation)</title><link>https://ryantokmanmokmtm.github.io/post/note/database-transaction/</link><pubDate>Sat, 23 Nov 2024 22:11:45 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/database-transaction/</guid><description>簡介 這篇文章主要是想要討論一下資料庫筆一個重要的概念事務(Transcation)(Transcation)。接下來的文章主要會分成一下幾個</description></item><item><title>[筆記] 平衡樹 Balance Tree</title><link>https://ryantokmanmokmtm.github.io/post/note/balance-tree/</link><pubDate>Thu, 31 Oct 2024 15:28:20 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/balance-tree/</guid><description>簡介 在講述Balance Tree之前，我們先來看一種情況。現在我們根據數據來建立一棵Binary Search Tree，譬如說以下的數據 : [4,5,6,7,8,9,10], 我們就會建立</description></item><item><title>[筆記] Binary Search 演算法</title><link>https://ryantokmanmokmtm.github.io/post/note/note-binarysearch/</link><pubDate>Thu, 09 Mar 2023 13:48:46 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/note-binarysearch/</guid><description>Binary Search 演算法是用於在一個有序array中搜尋一個值的演算法 - TC:O(log n)。相較於Linear Search(線性搜尋) - TC:O(n),其效率大大提高</description></item><item><title>[筆記] KMP - Knuth-Morris-Pratt 演算法</title><link>https://ryantokmanmokmtm.github.io/post/note/note-kmp/</link><pubDate>Mon, 06 Mar 2023 12:32:40 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/note-kmp/</guid><description>KMP(Knuth-Morris-Pratt) 算法是一個用於字符串匹配的一個算法，但確實有點抽象和複雜，因此打算寫一篇筆記來紀錄一下這個算法！ 給定一個text以及pattern字符串，</description></item><item><title>[筆記]TrieTree(前綴樹/字典樹)</title><link>https://ryantokmanmokmtm.github.io/post/note/trietree/</link><pubDate>Tue, 21 Jun 2022 11:19:28 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/trietree/</guid><description>Introduction 什麼是TrieTree? Trie稱為前綴樹或字典樹,是有序樹的一種,Node的key通常為String類型。Trie Tree與Binary</description></item><item><title>[筆記]Palindromic String(迴文字串)</title><link>https://ryantokmanmokmtm.github.io/post/note/palindromicstring/</link><pubDate>Thu, 16 Jun 2022 12:26:03 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/palindromicstring/</guid><description>Introduction 什麼是Palindromic String 迴文字串 所謂的Palindromic String(迴文字串) 就是以一個字元為中間，而它的左邊以及右邊的組成字</description></item><item><title>[Note]Simple RateLimiter Example Based on IP</title><link>https://ryantokmanmokmtm.github.io/post/note/simple-ratelimiter-example-based-on-ip/</link><pubDate>Wed, 30 Mar 2022 16:05:57 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/simple-ratelimiter-example-based-on-ip/</guid><description>基於Gin實作Rate Limiter 假設我們有2個APIs,而每個API都需要消耗1個Tokens uri method desc /api/posts/{id} GET return a simple demo message /ping GET return pong 我們先設置一下rate li</description></item><item><title>[Note]Token Bucket algorithm introduction and play with golang rate Limiter</title><link>https://ryantokmanmokmtm.github.io/post/note/token-bucket-intro/</link><pubDate>Tue, 29 Mar 2022 18:33:07 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/token-bucket-intro/</guid><description>Token Bucket(令牌桶算法) 什麼是Token Bucket 呢? 簡單來說就是運用Token Bucket的系統會以一個設定的速率往桶子(Bucket)裡面丟</description></item><item><title>[Note]What Is JWT(Json Web Token)-EN</title><link>https://ryantokmanmokmtm.github.io/post/note/jwt-note/</link><pubDate>Thu, 24 Mar 2022 13:52:49 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/jwt-note/</guid><description>What is JWT(Json Web Token)? The full name of JWT is Json Web Token. Acccording to the definition, JWT is a proposed Internet standard for creating data with optinal signature and/or opntional encryption whose payload holds JSON that asserts some number of clamis.
It&amp;rsquo;s used for identity authentication between client and the server that allows accessing resources in the server.
The Structure of JWT JWT consists of three parts including:</description></item></channel></rss>