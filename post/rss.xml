<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/post/</link><description>Recent content in Posts on Jackson.tmm</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Sat, 23 Nov 2024 15:28:20 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/post/rss.xml" rel="self" type="application/rss+xml"/><item><title>2024年軟體工程師(Software engineer)面試總結</title><link>https://ryantokmanmokmtm.github.io/post/share/2024-swe-interview-summary/</link><pubDate>Sun, 10 Nov 2024 15:29:39 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/share/2024-swe-interview-summary/</guid><description>簡介 Intro 在過去的幾個月裡一直在找新的工作機會，從2024/8/27起開始在各大招聘平台投遞履歷以及約面談。這篇文章主要是想分享這段時間面試經歷</description></item><item><title>[筆記] 平衡樹 Balance Tree</title><link>https://ryantokmanmokmtm.github.io/post/note/balance-tree/</link><pubDate>Thu, 31 Oct 2024 15:28:20 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/balance-tree/</guid><description>簡介 在講述Balance Tree之前，我們先來看一種情況。現在我們根據數據來建立一棵Binary Search Tree，譬如說以下的數據 : [4,5,6,7,8,9,10], 我們就會建立</description></item><item><title>[開發者日記] 聊天通訊APP(完結) - 總結</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-final-summary/</link><pubDate>Sun, 21 Apr 2024 23:12:11 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-final-summary/</guid><description>簡介 Hi, 已經有一段時間沒有更新了，因為最近在研究多人串流的問題。這篇文章主要是分享我做了些什麼以及對這個project做個總結，這裡的意思就是</description></item><item><title>[開發者日記] 聊天通訊APP - 貼圖更新(III)</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-sticker-shop-updated/</link><pubDate>Sat, 11 Nov 2023 11:08:40 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-sticker-shop-updated/</guid><description>簡介 如果您想了解該項目的內容，請閱讀以下文章 ChatApp(I) ChatApp(II) ChatApp(III) ChatApp(IV) ChatApp(V) ChatApp(VI) ChatApp(Ⅶ) ChatApp(Ⅷ) Demo 簡介 正如我在 這篇文章 中提到的，我添加了一個</description></item><item><title>[開發者日記] 聊天通訊APP - 限時動態更新(III)</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-story-view-updated/</link><pubDate>Thu, 09 Nov 2023 20:23:44 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-story-view-updated/</guid><description>簡介 如果您想了解該項目的內容，請閱讀以下文章。 ChatApp(I) ChatApp(II) ChatApp(III) ChatApp(IV) ChatApp(V) ChatApp(VI) ChatApp(Ⅶ) ChatApp(Ⅷ) Demo 描述 在先前的版本中，用戶只能查看好友的故</description></item><item><title>[開發者日記] 聊天通訊APP - 限時動態更新(II)</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-story-multiple-img-updated/</link><pubDate>Sun, 10 Sep 2023 12:49:44 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-story-multiple-img-updated/</guid><description>簡介 如果您想了解該項目的內容，請閱讀以下文章。 ChatApp(I) ChatApp(II) ChatApp(III) ChatApp(IV) ChatApp(V) ChatApp(VI) 這是關於限時動態功能的demo，類似於instagram（我的UI參考來自inst</description></item><item><title>[開發者日記] 聊天通訊APP - 限時動態更新(I)</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-story-alignment-updated/</link><pubDate>Tue, 05 Sep 2023 20:19:33 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-story-alignment-updated/</guid><description>簡介 如果您想了解該項目的內容，請閱讀以下文章。 ChatApp(I) ChatApp(II) ChatApp(III) ChatApp(IV) ChatApp(V) ChatApp(VI) Demo TODO 在先前的版本中，它確實允許用戶將多個文本添加到他們的限時動態中。但如果不使用眼</description></item><item><title>[開發者日記] 聊天通訊APP - 貼圖更新(I)</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-sticker-updated/</link><pubDate>Wed, 24 May 2023 21:32:47 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-sticker-updated/</guid><description>簡介 關於這個專案我就不多說了，如果你對這個專案有興趣的話，請看我之前的貼文。在之前的文章中，我已經詳細介紹了這個專案。 ChatApp(I) ChatApp(II) ChatApp(III) ChatApp(IV) ChatApp(V) 在demo影</description></item><item><title>[開發者日記] 聊天通訊APP - RTC小更新</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-voice-chat/</link><pubDate>Sat, 13 May 2023 23:58:58 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-voice-chat/</guid><description>簡介 我在 [開發者日記] 聊天通訊APP(一) 中有提及過這app會有 語音通訊 視頻通訊 這次他們真的來了！！廢話少說先看視頻 說明 雖然現在只有展示了語</description></item><item><title>[開發者日記] 聊天通訊APP(四) - 最終章</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-final/</link><pubDate>Mon, 01 May 2023 19:25:38 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-final/</guid><description>簡介 在之前 序章 中，雖然已經大概介紹過這個app在幹嘛。但是因為這次是最終章的成品展示(或許有些部分沒實現😂)，所以就允許我囉嗦得再說一次吧！</description></item><item><title>[開發者日記] 聊天通訊APP(三) - 聊天小更新</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-update/</link><pubDate>Sat, 29 Apr 2023 20:17:18 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-update/</guid><description>廢話少說直接上影片 對上一次的 demo 中，雖然也包含了個人聊天和群組聊天的部分，但是只支援普通文本和圖片的傳送，而這次修復了文件發送，音頻發送已經視</description></item><item><title>[開發者日記] 聊天通訊APP(二) - Demo</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-demo/</link><pubDate>Mon, 24 Apr 2023 12:24:38 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-demo/</guid><description>這篇文章主要是展示一下整個App的Demo，廢話不多說，先上視頻: Demo說明 這個App的詳細介紹在 [開發者日記] 聊天通訊APP(一) 中已經</description></item><item><title>[開發日記] 聊天通訊APP(一) - 序章</title><link>https://ryantokmanmokmtm.github.io/post/project/chat-app-init/</link><pubDate>Wed, 19 Apr 2023 17:08:14 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/chat-app-init/</guid><description>因為之前的OTT電影社群APP中有包含通訊的功能，但是那個App所實現的功能就只是簡單的存文字聊天而已，而那個app主要的focus點並不在</description></item><item><title>[筆記] Binary Search 演算法</title><link>https://ryantokmanmokmtm.github.io/post/note/note-binarysearch/</link><pubDate>Thu, 09 Mar 2023 13:48:46 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/note-binarysearch/</guid><description>Binary Search 演算法是用於在一個有序array中搜尋一個值的演算法 - TC:O(log n)。相較於Linear Search(線性搜尋) - TC:O(n),其效率大大提高</description></item><item><title>[筆記] KMP - Knuth-Morris-Pratt 演算法</title><link>https://ryantokmanmokmtm.github.io/post/note/note-kmp/</link><pubDate>Mon, 06 Mar 2023 12:32:40 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/note-kmp/</guid><description>KMP(Knuth-Morris-Pratt) 算法是一個用於字符串匹配的一個算法，但確實有點抽象和複雜，因此打算寫一篇筆記來紀錄一下這個算法！ 給定一個text以及pattern字符串，</description></item><item><title>2022年LeetCode年度總結(Summary)</title><link>https://ryantokmanmokmtm.github.io/post/coding/lc-sumarry-of-2022/</link><pubDate>Sun, 01 Jan 2023 12:42:37 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/coding/lc-sumarry-of-2022/</guid><description>Leetcode 總結 雖然在2021年暑假的這段時間有刷過一整子大概有50道題左右，但是2021年9月到12月在忙畢業專題因此就停止了。直到我12月份去找投</description></item><item><title>透過Kops工具在AWS中部署K8S集群</title><link>https://ryantokmanmokmtm.github.io/post/coding/kuberneters-on-aws/</link><pubDate>Fri, 23 Dec 2022 14:39:46 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/coding/kuberneters-on-aws/</guid><description>這篇文章主要是講述如何在AWS雲服務中部署Kubernetes集群 首先，我們需要準備使用一下工具進行設置 KOps - 一個能讓我們輕鬆無痛部署Kube</description></item><item><title>[總結]Leetcode 週賽第319場復盤總結</title><link>https://ryantokmanmokmtm.github.io/post/coding/leetcode-contest319/</link><pubDate>Sun, 13 Nov 2022 11:45:46 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/coding/leetcode-contest319/</guid><description>今日為2022年11月13日(週日) - Leetcode 週賽第319場 目前參加週賽主要的目的是學習跟訓練，所有當前主要focus在解Easy 跟 Medium的</description></item><item><title>Leetcode Weekly Contest 331(第一次參加競賽)</title><link>https://ryantokmanmokmtm.github.io/post/coding/leetcodeweeklycontest331/</link><pubDate>Sun, 18 Sep 2022 16:32:34 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/coding/leetcodeweeklycontest331/</guid><description>今天是我第一次參加Leetcode 雙週賽，所以想記錄一下今天的競賽題目。希望能透過博客來記錄自己的競賽狀況。 本週AC題數為:4/4 題目 2413. Smallest Even</description></item><item><title>[開發日記]OTT電影社群APP(一)</title><link>https://ryantokmanmokmtm.github.io/post/project/dev-ottapp-1/</link><pubDate>Tue, 06 Sep 2022 12:36:22 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/project/dev-ottapp-1/</guid><description>最近這2個月都沒有更新發文章，主要是因為這2個月都在專注重構畢業專題的項目，也是只OTT電影平台。 今天這篇文章主要是跟大家分享這2個月所開發</description></item><item><title>[筆記]TrieTree(前綴樹/字典樹)</title><link>https://ryantokmanmokmtm.github.io/post/note/trietree/</link><pubDate>Tue, 21 Jun 2022 11:19:28 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/trietree/</guid><description>Introduction 什麼是TrieTree? Trie稱為前綴樹或字典樹,是有序樹的一種,Node的key通常為String類型。Trie Tree與Binary</description></item><item><title>[筆記]Palindromic String(迴文字串)</title><link>https://ryantokmanmokmtm.github.io/post/note/palindromicstring/</link><pubDate>Thu, 16 Jun 2022 12:26:03 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/palindromicstring/</guid><description>Introduction 什麼是Palindromic String 迴文字串 所謂的Palindromic String(迴文字串) 就是以一個字元為中間，而它的左邊以及右邊的組成字</description></item><item><title>[筆記]Longest Common SubString(最長公共子序列)</title><link>https://ryantokmanmokmtm.github.io/post/coding/lcm/</link><pubDate>Tue, 14 Jun 2022 13:11:28 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/coding/lcm/</guid><description>Introduction 什麼是最長公共子序列? 給定2個字串string A和string B,2個字串中所共同擁有的最長的子字串。 例如: String A : leetcode String B : ecbod 他們的最長公共</description></item><item><title>MetaHuman虛擬數字人初探</title><link>https://ryantokmanmokmtm.github.io/post/share/mataverse-matahuman/</link><pubDate>Sun, 12 Jun 2022 15:01:27 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/share/mataverse-matahuman/</guid><description>因為元宇宙(Metaverse)這個概念火熱,所有我就趁著這個機會了解一下在元宇宙領域中本人覺得比較有趣的東西。也就是這篇文章所要分享給各位</description></item><item><title>[Note]Creational Singleton Pattern</title><link>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-singleton-pattern/</link><pubDate>Sat, 09 Apr 2022 11:19:39 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-singleton-pattern/</guid><description>什麼是Singleton Pattern(單例模式)呢? 定義:一個Class在系統中只會存在一個實例(instance),整個系統中只提供1個</description></item><item><title>[Note]Creational Abstract Factory</title><link>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-abstract-factory/</link><pubDate>Sun, 03 Apr 2022 19:38:20 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-abstract-factory/</guid><description>什麼是Abstract Factory(抽象工廠)呢? 定義: 又稱為Kit模式。提供一個創建系列相關或者互相依賴的Interface，而無需指定</description></item><item><title>[Note]Simple RateLimiter Example Based on IP</title><link>https://ryantokmanmokmtm.github.io/post/note/simple-ratelimiter-example-based-on-ip/</link><pubDate>Wed, 30 Mar 2022 16:05:57 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/simple-ratelimiter-example-based-on-ip/</guid><description>基於Gin實作Rate Limiter 假設我們有2個APIs,而每個API都需要消耗1個Tokens uri method desc /api/posts/{id} GET return a simple demo message /ping GET return pong 我們先設置一下rate li</description></item><item><title>[Note]Token Bucket algorithm introduction and play with golang rate Limiter</title><link>https://ryantokmanmokmtm.github.io/post/note/token-bucket-intro/</link><pubDate>Tue, 29 Mar 2022 18:33:07 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/token-bucket-intro/</guid><description>Token Bucket(令牌桶算法) 什麼是Token Bucket 呢? 簡單來說就是運用Token Bucket的系統會以一個設定的速率往桶子(Bucket)裡面丟</description></item><item><title>[Note]Creational-Factory</title><link>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-factory/</link><pubDate>Sun, 27 Mar 2022 16:55:17 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-factory/</guid><description>什麼是Factory(工廠)呢? 定義:建立一個接口,讓子類自己決定實現哪一個Factory,其重點是繼承了Simple Factory Patterns的優</description></item><item><title>[Note]Creational-Simple Factory</title><link>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-simple-factory/</link><pubDate>Sun, 27 Mar 2022 16:42:45 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/design-pattern/creational-simple-factory/</guid><description>什麼是Simple Factory(簡單工廠)呢? 簡單而言就是: 由一個工廠來生產全部產品 定義:建立一個接口,讓子類自己決定實現哪一個Facto</description></item><item><title>[Note]Design Pattern Princeple</title><link>https://ryantokmanmokmtm.github.io/post/design-pattern/design-pattern-princeple/</link><pubDate>Sun, 27 Mar 2022 16:18:55 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/design-pattern/design-pattern-princeple/</guid><description>什麼是Design Pattern(設計模式)呢? 設計模式(Design Pattern) 是對軟體設計中普遍存在（反覆出現）的各種問題，所提出的解決方案。用於</description></item><item><title>[Note]What Is JWT(Json Web Token)-EN</title><link>https://ryantokmanmokmtm.github.io/post/note/jwt-note/</link><pubDate>Thu, 24 Mar 2022 13:52:49 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/note/jwt-note/</guid><description>What is JWT(Json Web Token)? The full name of JWT is Json Web Token. Acccording to the definition, JWT is a proposed Internet standard for creating data with optinal signature and/or opntional encryption whose payload holds JSON that asserts some number of clamis.
It&amp;rsquo;s used for identity authentication between client and the server that allows accessing resources in the server.
The Structure of JWT JWT consists of three parts including:</description></item></channel></rss>