<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Binary Tree on Jackson.tmm</title><link>http://localhost:1414/tags/binary-tree/</link><description>Recent content in Binary Tree on Jackson.tmm</description><generator>Hugo 0.125.2</generator><language>zh-TW</language><lastBuildDate>Wed, 14 Sep 2022 15:27:08 +0800</lastBuildDate><atom:link href="http://localhost:1414/tags/binary-tree/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Pseudo-Palindromic Paths in a Binary Tree(Medium)</title><link>http://localhost:1414/leetcodes/leetcode1457/</link><pubDate>Wed, 14 Sep 2022 15:27:08 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode1457/</guid><description>LeetCode 1457 - Pseudo-Palindromic Paths in a Binary Tree Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be pseudo-palindromic if at least one permutation of the node values in the path is a palindrome. Return the number of pseudo-palindromic paths going from the root node to leaf nodes. example Input: root = [2,3,1,3,1,null,1] Output: 2 Explanation:</description></item><item><title>[Leetcode] Binary Tree Inorder Traversal(Easy)</title><link>http://localhost:1414/leetcodes/leetcode94/</link><pubDate>Thu, 08 Sep 2022 20:22:06 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode94/</guid><description>LeetCode 94 - Binary Tree Inorder Traversal Given the root of a binary tree, return the inorder traversal of its nodes&amp;rsquo; values. example Input: root = [1,null,2,3] Output: [1,3,2] Input: root = [] Output: [] Input: root = [1] Output: [1] How can we solve this problem? 這題很簡單,只要使用中序遍歷即可。 Solution: /** * Definition for a</description></item><item><title>[Leetcode] Construct String from Binary Tree(Easy)</title><link>http://localhost:1414/leetcodes/leetcode606/</link><pubDate>Wed, 07 Sep 2022 10:12:28 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode606/</guid><description>LeetCode 606 - Construct String from Binary Tree Given the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it. Omit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and the original binary tree. example Input: root = [1,2,3,4] Output: &amp;#34;1(2(4))(3)&amp;#34; Explanation: Originally, it needs to be</description></item><item><title>[Leetcode] Create Binary Tree From Descriptions(Medium)</title><link>http://localhost:1414/leetcodes/leetcode2196/</link><pubDate>Tue, 06 Sep 2022 21:45:02 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode2196/</guid><description>LeetCode 2196 - Create Binary Tree From Descriptions You are given a 2D integer array descriptions where descriptions[i] = [parenti, childi, isLefti] indicates that parenti is the parent of childi in a binary tree of unique values. Furthermore, If isLefti == 1, then childi is the left child of parenti. If isLefti == 0, then childi is the right child of parenti. Construct the binary tree described by descriptions and</description></item><item><title>[Leetcode] Binary Tree Pruning(Medium)</title><link>http://localhost:1414/leetcodes/leetcode814/</link><pubDate>Tue, 06 Sep 2022 21:30:56 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode814/</guid><description>LeetCode 814 - Binary Tree Pruning Given the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed. A subtree of a node node is node plus every node that is a descendant of node. example Input: root = [1,null,0,0,1] Output: [1,null,0,null,1] Explanation: Only the red nodes satisfy the property &amp;#34;every subtree not containing a 1&amp;#34;. The</description></item><item><title>[Leetcode] Trim a Binary Search Tree(Medium)</title><link>http://localhost:1414/leetcodes/leetcode669/</link><pubDate>Fri, 15 Apr 2022 18:29:14 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode669/</guid><description>LeetCode 669 - Trim a Binary Search Tree Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i.e., any node&amp;rsquo;s descendant should remain a descendant). It can be proven that there</description></item><item><title>[Leetcode] Search in a Binary Search Tree(Easy)</title><link>http://localhost:1414/leetcodes/leetcode700/</link><pubDate>Thu, 14 Apr 2022 15:05:44 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode700/</guid><description>LeetCode 700 - Search in a Binary Search Tree You are given the root of a binary search tree (BST) and an integer val. Find the node in the BST that the node&amp;rsquo;s value equals val and return the subtree rooted with that node. If such a node does not exist, return null. example Input: root = [4,2,7,1,3], val = 2 Output: [2,1,3] Input: root = [4,2,7,1,3], val = 5</description></item></channel></rss>