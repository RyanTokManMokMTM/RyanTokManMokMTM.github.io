<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dynamic Programming on Jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/tags/dynamic-programming/</link><description>Recent content in Dynamic Programming on Jackson.tmm</description><generator>Hugo</generator><language>zh-tw</language><lastBuildDate>Fri, 16 Sep 2022 20:42:00 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/tags/dynamic-programming/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Maximum Score from Performing Multiplication Operations(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode1770/</link><pubDate>Fri, 16 Sep 2022 20:42:00 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode1770/</guid><description>&lt;h2 id="leetcode-1770---maximum-score-from-performing-multiplication-operations">LeetCode 1770 - Maximum Score from Performing Multiplication Operations
&lt;a class="header-anchor" href="#leetcode-1770---maximum-score-from-performing-multiplication-operations">&lt;/a>
&lt;/h2>&lt;p>You are given two integer arrays &lt;code>nums&lt;/code> and &lt;code>multipliers&lt;/code> of size &lt;code>n&lt;/code> and &lt;code>m&lt;/code> respectively, where &lt;code>n &amp;gt;= m&lt;/code>. The arrays are &lt;strong>1-indexed&lt;/strong>.&lt;/p>
&lt;p>You begin with a score of &lt;code>0&lt;/code>. You want to perform &lt;strong>exactly&lt;/strong> &lt;code>m&lt;/code> operations. On the &lt;code>ith&lt;/code> operation (&lt;strong>1-indexed&lt;/strong>), you will:&lt;/p>
&lt;ul>
&lt;li>Choose one integer &lt;code>x&lt;/code> from &lt;strong>either the start or the end&lt;/strong> of the array &lt;code>nums&lt;/code>.&lt;/li>
&lt;li>Add &lt;code>multipliers[i] * &lt;/code>x` to your score.&lt;/li>
&lt;li>Remove x from the array &lt;code>nums&lt;/code>.
Return the maximum score after performing m operations.
example&lt;/li>
&lt;/ul>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: nums = [1,2,3], multipliers = [3,2,1]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 14
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: An optimal solution is as follows:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [1,2,3], adding 3 * 3 = 9 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [1,2], adding 2 * 2 = 4 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [1], adding 1 * 1 = 1 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The total score is 9 + 4 + 1 = 14.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>


&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6">6&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7">7&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8">8&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9">9&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: nums = [-5,-3,-3,-2,7,1], multipliers = [-10,-5,3,4,6]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 102
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: An optimal solution is as follows:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the start, [-5,-3,-3,-2,7,1], adding -5 * -10 = 50 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the start, [-3,-3,-2,7,1], adding -3 * -5 = 15 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the start, [-3,-2,7,1], adding -3 * 3 = -9 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [-2,7,1], adding 1 * 4 = 4 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [-2,7], adding 7 * 6 = 42 to the score. 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The total score is 50 + 15 - 9 + 4 + 42 = 102.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="how-can-we-solve-this-problem">How can we solve this problem?
&lt;a class="header-anchor" href="#how-can-we-solve-this-problem">&lt;/a>
&lt;/h2>&lt;p>這題最主要的重點是對於每個&lt;code>multipliers[i]&lt;/code>,它只能挑選最左邊或者最右邊的值。所有，我們需要知道&lt;code>multipliers[i]&lt;/code>拿最左邊的值最後的結果比較大，還是拿最右邊後的結果比較大。為了避免重複計算而超時，所以我們需要使用&lt;code>dp&lt;/code>來幫助我們記錄當前最優解。&lt;code>注:因multipliers最多為m個，所有最多只能從nums拿m個數字&lt;/code>&lt;/p></description></item><item><title>[Leetcode DP] Counting Bits(Easy)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcodes338/</link><pubDate>Thu, 23 Jun 2022 11:33:51 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcodes338/</guid><description>&lt;h2 id="leetcode-338---counting-bits">LeetCode 338 - Counting Bits
&lt;a class="header-anchor" href="#leetcode-338---counting-bits">&lt;/a>
&lt;/h2>&lt;p>Given an integer &lt;code>n&lt;/code>, return an &lt;em>array &lt;code>ans&lt;/code> of length &lt;code>n + 1&lt;/code> such that for each &lt;code>i&lt;/code> (&lt;code>0 &amp;lt;= i &amp;lt;= n&lt;/code>), &lt;code>ans[i]&lt;/code> is the &lt;strong>number&lt;/strong> of &lt;code>1&lt;/code>&amp;rsquo;s in the binary representation of &lt;code>i&lt;/code>.&lt;/em>&lt;/p>
&lt;p>example:&lt;/p>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: n = 2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: [0,1,1]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0 --&amp;gt; 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1 --&amp;gt; 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2 --&amp;gt; 10&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>


&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6">6&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7">7&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8">8&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9">9&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: n = 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: [0,1,1,2,1,2]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0 --&amp;gt; 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1 --&amp;gt; 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2 --&amp;gt; 10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3 --&amp;gt; 11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4 --&amp;gt; 100
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">5 --&amp;gt; 101&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="how-can-we-solve-this-problem">How can we solve this problem?
&lt;a class="header-anchor" href="#how-can-we-solve-this-problem">&lt;/a>
&lt;/h2>&lt;p>這題要我們解決的問題是給定一個數字&lt;code>n&lt;/code>,回傳&lt;code>0 - n&lt;/code>中每個數字包含了多少個為1的&lt;code>bits&lt;/code>。例如: &lt;code>n=2 =&amp;gt; 00,01,10&lt;/code>,回傳的結果便會是&lt;code>[0,1,1]&lt;/code>。&lt;/p></description></item><item><title>[Leetcode] Longest Palindromic Substring(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode5/</link><pubDate>Thu, 16 Jun 2022 14:09:50 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode5/</guid><description>&lt;h2 id="leetcode-5---longest-palindromic-substring">LeetCode 5 - Longest Palindromic Substring
&lt;a class="header-anchor" href="#leetcode-5---longest-palindromic-substring">&lt;/a>
&lt;/h2>&lt;p>Given a string s, return the longest palindromic substring in s.&lt;/p>
&lt;p>example&lt;/p>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: s = &amp;#34;babad&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: &amp;#34;bab&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: &amp;#34;aba&amp;#34; is also a valid answer.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>


&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: s = &amp;#34;cbbd&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: &amp;#34;bb&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="how-can-we-solve-this-problem">How can we solve this problem?
&lt;a class="header-anchor" href="#how-can-we-solve-this-problem">&lt;/a>
&lt;/h2>&lt;p>要解決這題，我們必須要先知道什麼是Palindrome。可以參考這篇文章
&lt;a href="https://ryantokmanmokmtm.github.io/leetcodenotes/palindromicstring" title="Palindromic string迴文" >
 Palindromic string迴文
 
&lt;/a>。而這題要我們找出在給定string中,找到最長的Palindrome。我們可以透過以每個單一字元(&lt;code>index i&lt;/code>)以及倆個字元(&lt;code>index i&lt;/code>,&lt;code>index i+1&lt;/code>)為中心點，並擴展&lt;code>left,right&lt;/code>找出他們的局部的最長Palindrome為多少，然後根據這個長度計算&lt;code>starting point i&lt;/code>以及記錄長度&lt;code>len&lt;/code>,最後以&lt;code>starting point&lt;/code>和&lt;code>len&lt;/code>得出字串中&lt;code>str[startingPoint,len]&lt;/code>為解。&lt;/p></description></item><item><title>[筆記]Palindromic String(迴文字串)</title><link>https://ryantokmanmokmtm.github.io/archives/note/palindromicstring/</link><pubDate>Thu, 16 Jun 2022 12:26:03 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/archives/note/palindromicstring/</guid><description>&lt;h1 id="introduction">Introduction
&lt;a class="header-anchor" href="#introduction">&lt;/a>
&lt;/h1>&lt;h2 id="什麼是palindromic-string-迴文字串">什麼是Palindromic String 迴文字串
&lt;a class="header-anchor" href="#%e4%bb%80%e9%ba%bc%e6%98%afpalindromic-string-%e8%bf%b4%e6%96%87%e5%ad%97%e4%b8%b2">&lt;/a>
&lt;/h2>&lt;p>所謂的Palindromic String(迴文字串) 就是以一個字元為中間，而它的左邊以及右邊的組成字元相同。&lt;br>
例子:&lt;br>
&lt;code>abcdcba&lt;/code> 以&lt;code>d&lt;/code>為中心的左跟右的字元一樣。&lt;br>
&lt;code>cdc&lt;/code>左跟右都為&lt;code>c&lt;/code>&lt;br>
&lt;code>bcdcb&lt;/code> 左跟右都為&lt;code>b&lt;/code>&lt;br>
&lt;code>abcdcba&lt;/code> 左跟右都為&lt;code>a&lt;/code>&lt;/p></description></item><item><title>[筆記]Longest Common SubString(最長公共子序列)</title><link>https://ryantokmanmokmtm.github.io/archives/coding/lcm/</link><pubDate>Tue, 14 Jun 2022 13:11:28 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/archives/coding/lcm/</guid><description>&lt;h1 id="introduction">Introduction
&lt;a class="header-anchor" href="#introduction">&lt;/a>
&lt;/h1>&lt;h2 id="什麼是最長公共子序列">什麼是最長公共子序列?
&lt;a class="header-anchor" href="#%e4%bb%80%e9%ba%bc%e6%98%af%e6%9c%80%e9%95%b7%e5%85%ac%e5%85%b1%e5%ad%90%e5%ba%8f%e5%88%97">&lt;/a>
&lt;/h2>&lt;p>給定2個字串&lt;code>string A&lt;/code>和&lt;code>string B&lt;/code>,2個字串中所共同擁有的最長的子字串。&lt;br>
例如:&lt;/p>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-mysql" data-lang="mysql">&lt;span class="line">&lt;span class="cl">&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">leetcode&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ecbod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">他們的最長公共子序列便是&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">ecod&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="err">解釋&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">包含了&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">__e_cod_&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ecod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">包含了&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ec_od&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ecod&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="要怎麼找到最長公共子序列lcm呢">要怎麼找到最長公共子序列LCM呢?
&lt;a class="header-anchor" href="#%e8%a6%81%e6%80%8e%e9%ba%bc%e6%89%be%e5%88%b0%e6%9c%80%e9%95%b7%e5%85%ac%e5%85%b1%e5%ad%90%e5%ba%8f%e5%88%97lcm%e5%91%a2">&lt;/a>
&lt;/h2>&lt;p>我們需要定義一個數組用於保存當前情況下的最優解,也就是使用&lt;code>DP&lt;/code>的方式。我們需要以每個字符最為考量,並一一匹配，最後得出整體最優解。
&lt;img src="https://ryantokmanmokmtm.github.io/imgs/img-lazy-loading.gif" data-src="https://ryantokmanmokmtm.github.io/imgs-custom/leetcodesHelper/lcm.png" alt="LCM" />&lt;/p></description></item></channel></rss>