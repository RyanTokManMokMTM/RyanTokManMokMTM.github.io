<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recursive on Jackson的博客</title><link>http://localhost:1414/tags/recursive/</link><description>Recent content in Recursive on Jackson的博客</description><generator>Hugo 0.125.2</generator><language>zh-TW</language><lastBuildDate>Thu, 15 Sep 2022 00:31:46 +0800</lastBuildDate><atom:link href="http://localhost:1414/tags/recursive/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Pancake Sorting(Medium)</title><link>http://localhost:1414/leetcodes/leetcode969/</link><pubDate>Thu, 15 Sep 2022 00:31:46 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode969/</guid><description>LeetCode 969 - Pancake Sorting Given an array of integers arr, sort the array by performing a series of pancake flips. In one pancake flip we do the following steps: Choose an integer k where 1 &amp;lt;= k &amp;lt;= arr.length. Reverse the sub-array arr[0...k-1] (0-indexed). For example, if arr = [3,2,1,4] and we performed a pancake flip choosing k = 3, we reverse the sub-array [3,2,1], so arr = [1,2,3,4]</description></item><item><title>[Leetcode] Pseudo-Palindromic Paths in a Binary Tree(Medium)</title><link>http://localhost:1414/leetcodes/leetcode1457/</link><pubDate>Wed, 14 Sep 2022 15:27:08 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode1457/</guid><description>LeetCode 1457 - Pseudo-Palindromic Paths in a Binary Tree Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be pseudo-palindromic if at least one permutation of the node values in the path is a palindrome. Return the number of pseudo-palindromic paths going from the root node to leaf nodes. example Input: root = [2,3,1,3,1,null,1] Output: 2 Explanation:</description></item><item><title>[Leetcode] Construct String from Binary Tree(Easy)</title><link>http://localhost:1414/leetcodes/leetcode606/</link><pubDate>Wed, 07 Sep 2022 10:12:28 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode606/</guid><description>LeetCode 606 - Construct String from Binary Tree Given the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it. Omit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and the original binary tree. example Input: root = [1,2,3,4] Output: &amp;#34;1(2(4))(3)&amp;#34; Explanation: Originally, it needs to be</description></item><item><title>[Leetcode] Binary Tree Pruning(Medium)</title><link>http://localhost:1414/leetcodes/leetcode814/</link><pubDate>Tue, 06 Sep 2022 21:30:56 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode814/</guid><description>LeetCode 814 - Binary Tree Pruning Given the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed. A subtree of a node node is node plus every node that is a descendant of node. example Input: root = [1,null,0,0,1] Output: [1,null,0,null,1] Explanation: Only the red nodes satisfy the property &amp;#34;every subtree not containing a 1&amp;#34;. The</description></item><item><title>[Leetcode] Reverse Linked List II(Medium)</title><link>http://localhost:1414/leetcodes/leetcode92/</link><pubDate>Thu, 21 Jul 2022 11:09:21 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode92/</guid><description>LeetCode 92 - Reverse Linked List II Given the head of a singly linked list and two integers left and right where left &amp;lt;= right, reverse the nodes of the list from position left to position right, and return the reversed list. example Input: head = [1,2,3,4,5], left = 2, right = 4 Output: [1,4,3,2,5] Input: head = [5], left = 1, right = 1 Output: [5] How can we</description></item></channel></rss>