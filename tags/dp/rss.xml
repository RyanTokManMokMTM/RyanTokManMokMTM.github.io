<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dp on Jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/tags/dp/</link><description>Recent content in Dp on Jackson.tmm</description><generator>Hugo</generator><language>zh-tw</language><lastBuildDate>Tue, 20 Sep 2022 14:47:44 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/tags/dp/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Maximum Length of Repeated Subarray(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode718/</link><pubDate>Tue, 20 Sep 2022 14:47:44 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode718/</guid><description>&lt;h2 id="leetcode-718---maximum-length-of-repeated-subarray">LeetCode 718 - Maximum Length of Repeated Subarray
&lt;a class="header-anchor" href="#leetcode-718---maximum-length-of-repeated-subarray">&lt;/a>
&lt;/h2>&lt;p>Given two integer arrays ``nums1&lt;code>and&lt;/code>nums2`, return the maximum length of a subarray that appears in both arrays.&lt;/p>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: The repeated subarray with maximum length is [3,2,1].&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>


&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 5&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="how-can-we-solve-this-problem">How can we solve this problem?
&lt;a class="header-anchor" href="#how-can-we-solve-this-problem">&lt;/a>
&lt;/h2>&lt;p>這題要我們找出2個&lt;code>array&lt;/code>中最長的相同&lt;code>subarray&lt;/code>。這題有點類似於
&lt;a href="https://ryantokmanmokmtm.github.io/notes/lcm" title="最長公共子序列" >
 最長公共子序列
 
&lt;/a>,但是不同的是&lt;code>子序列&lt;/code>不一樣的&lt;strong>連續的&lt;/strong>,而&lt;code>subarray&lt;/code>是必須要&lt;strong>連續的&lt;/strong>。哪我們只需要改寫一下&lt;code>最長公共子序列&lt;/code>,我們只需要更新&lt;strong>相等&lt;/strong>的元素即可。其餘的都不需要關心。&lt;/p></description></item><item><title>[Leetcode] Trapping Rain Water(Hard)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode42/</link><pubDate>Sun, 18 Sep 2022 14:29:08 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode42/</guid><description>&lt;h2 id="leetcode-42---trapping-rain-water">LeetCode 42 - Trapping Rain Water
&lt;a class="header-anchor" href="#leetcode-42---trapping-rain-water">&lt;/a>
&lt;/h2>&lt;p>Given &lt;code>n&lt;/code> non-negative integers representing an elevation map where the width of each bar is &lt;code>1&lt;/code>, compute how much water it can trap after raining.
example&lt;/p>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>


&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: height = [4,2,0,3,2,5]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 9&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="how-can-we-solve-this-problem">How can we solve this problem?
&lt;a class="header-anchor" href="#how-can-we-solve-this-problem">&lt;/a>
&lt;/h2>&lt;p>這題是給定一個&lt;code>array&lt;/code>代表著&lt;strong>高度&lt;/strong>，問我們一共可以裝多少水。這題的解題思路，假設當前是&lt;code>i&lt;/code>,那我當前這個&lt;code>i&lt;/code>是否可以裝水呢？我們是是不是要知道&lt;code>i&lt;/code>的左手邊的最高的柱子(&lt;code>x&lt;/code>)和最右手邊的最高的柱子(&lt;code>y&lt;/code>)，那跟柱子比較矮而且是不是大於現在這個&lt;code>i&lt;/code>。假設&lt;code>IFF x &amp;lt; y &amp;amp;&amp;amp; x &amp;gt; i&lt;/code>,哪&lt;code>i&lt;/code>可以裝的水就會是&lt;code>x - i&lt;/code>那麼多。所以說，我們必須要知道當前&lt;code>i&lt;/code>的左邊最高和&lt;code>i&lt;/code>的右邊最高是多少。哪要怎麼做呢？我們可以透過預處理的方式，預先計算左手邊(&lt;code>i之前&lt;/code>)最大值以及右手邊(&lt;code>i之後&lt;/code>)的最大值，然後在根據以上的方法即可解出答案。&lt;/p></description></item><item><title>[Leetcode] Maximum Score from Performing Multiplication Operations(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode1770/</link><pubDate>Fri, 16 Sep 2022 20:42:00 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode1770/</guid><description>&lt;h2 id="leetcode-1770---maximum-score-from-performing-multiplication-operations">LeetCode 1770 - Maximum Score from Performing Multiplication Operations
&lt;a class="header-anchor" href="#leetcode-1770---maximum-score-from-performing-multiplication-operations">&lt;/a>
&lt;/h2>&lt;p>You are given two integer arrays &lt;code>nums&lt;/code> and &lt;code>multipliers&lt;/code> of size &lt;code>n&lt;/code> and &lt;code>m&lt;/code> respectively, where &lt;code>n &amp;gt;= m&lt;/code>. The arrays are &lt;strong>1-indexed&lt;/strong>.&lt;/p>
&lt;p>You begin with a score of &lt;code>0&lt;/code>. You want to perform &lt;strong>exactly&lt;/strong> &lt;code>m&lt;/code> operations. On the &lt;code>ith&lt;/code> operation (&lt;strong>1-indexed&lt;/strong>), you will:&lt;/p>
&lt;ul>
&lt;li>Choose one integer &lt;code>x&lt;/code> from &lt;strong>either the start or the end&lt;/strong> of the array &lt;code>nums&lt;/code>.&lt;/li>
&lt;li>Add &lt;code>multipliers[i] * &lt;/code>x` to your score.&lt;/li>
&lt;li>Remove x from the array &lt;code>nums&lt;/code>.
Return the maximum score after performing m operations.
example&lt;/li>
&lt;/ul>

&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-0-1">&lt;a class="lnlinks" href="#hl-0-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-2">&lt;a class="lnlinks" href="#hl-0-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-3">&lt;a class="lnlinks" href="#hl-0-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-4">&lt;a class="lnlinks" href="#hl-0-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-5">&lt;a class="lnlinks" href="#hl-0-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-6">&lt;a class="lnlinks" href="#hl-0-6">6&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-0-7">&lt;a class="lnlinks" href="#hl-0-7">7&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: nums = [1,2,3], multipliers = [3,2,1]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 14
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: An optimal solution is as follows:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [1,2,3], adding 3 * 3 = 9 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [1,2], adding 2 * 2 = 4 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [1], adding 1 * 1 = 1 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The total score is 9 + 4 + 1 = 14.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>


&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt" id="hl-1-1">&lt;a class="lnlinks" href="#hl-1-1">1&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-2">&lt;a class="lnlinks" href="#hl-1-2">2&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-3">&lt;a class="lnlinks" href="#hl-1-3">3&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-4">&lt;a class="lnlinks" href="#hl-1-4">4&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-5">&lt;a class="lnlinks" href="#hl-1-5">5&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-6">&lt;a class="lnlinks" href="#hl-1-6">6&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-7">&lt;a class="lnlinks" href="#hl-1-7">7&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-8">&lt;a class="lnlinks" href="#hl-1-8">8&lt;/a>
&lt;/span>&lt;span class="lnt" id="hl-1-9">&lt;a class="lnlinks" href="#hl-1-9">9&lt;/a>
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Input: nums = [-5,-3,-3,-2,7,1], multipliers = [-10,-5,3,4,6]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Output: 102
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Explanation: An optimal solution is as follows:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the start, [-5,-3,-3,-2,7,1], adding -5 * -10 = 50 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the start, [-3,-3,-2,7,1], adding -3 * -5 = 15 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the start, [-3,-2,7,1], adding -3 * 3 = -9 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [-2,7,1], adding 1 * 4 = 4 to the score.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- Choose from the end, [-2,7], adding 7 * 6 = 42 to the score. 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The total score is 50 + 15 - 9 + 4 + 42 = 102.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>

&lt;h2 id="how-can-we-solve-this-problem">How can we solve this problem?
&lt;a class="header-anchor" href="#how-can-we-solve-this-problem">&lt;/a>
&lt;/h2>&lt;p>這題最主要的重點是對於每個&lt;code>multipliers[i]&lt;/code>,它只能挑選最左邊或者最右邊的值。所有，我們需要知道&lt;code>multipliers[i]&lt;/code>拿最左邊的值最後的結果比較大，還是拿最右邊後的結果比較大。為了避免重複計算而超時，所以我們需要使用&lt;code>dp&lt;/code>來幫助我們記錄當前最優解。&lt;code>注:因multipliers最多為m個，所有最多只能從nums拿m個數字&lt;/code>&lt;/p></description></item></channel></rss>