<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dsf on Jackson.tmm</title><link>http://localhost:1414/tags/dsf/</link><description>Recent content in Dsf on Jackson.tmm</description><generator>Hugo 0.125.2</generator><language>zh-TW</language><lastBuildDate>Wed, 07 Sep 2022 10:12:28 +0800</lastBuildDate><atom:link href="http://localhost:1414/tags/dsf/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Construct String from Binary Tree(Easy)</title><link>http://localhost:1414/leetcodes/leetcode606/</link><pubDate>Wed, 07 Sep 2022 10:12:28 +0800</pubDate><guid>http://localhost:1414/leetcodes/leetcode606/</guid><description>LeetCode 606 - Construct String from Binary Tree Given the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it. Omit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and the original binary tree. example Input: root = [1,2,3,4] Output: &amp;#34;1(2(4))(3)&amp;#34; Explanation: Originally, it needs to be</description></item></channel></rss>