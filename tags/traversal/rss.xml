<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Traversal on Jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/tags/traversal/</link><description>Recent content in Traversal on Jackson.tmm</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Thu, 08 Sep 2022 20:22:06 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/tags/traversal/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Binary Tree Inorder Traversal(Easy)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode94/</link><pubDate>Thu, 08 Sep 2022 20:22:06 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode94/</guid><description>LeetCode 94 - Binary Tree Inorder Traversal Given the root of a binary tree, return the inorder traversal of its nodes&amp;rsquo; values. example Input: root = [1,null,2,3] Output: [1,3,2] Input: root = [] Output: [] Input: root = [1] Output: [1] How can we solve this problem? 這題很簡單,只要使用中序遍歷即可。 Solution: /** * Definition for a</description></item></channel></rss>