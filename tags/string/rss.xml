<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>String on Jackson.tmm</title><link>https://ryantokmanmokmtm.github.io/tags/string/</link><description>Recent content in String on Jackson.tmm</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Mon, 19 Sep 2022 14:41:56 +0800</lastBuildDate><atom:link href="https://ryantokmanmokmtm.github.io/tags/string/rss.xml" rel="self" type="application/rss+xml"/><item><title>[Leetcode] Find Duplicate File in System(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode609/</link><pubDate>Mon, 19 Sep 2022 14:41:56 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode609/</guid><description>LeetCode 42 - Trapping Rain Water Given a list paths of directory info, including the directory path, and all the files with contents in this directory, return all the duplicate files in the file system in terms of their paths. You may return the answer in any order. A group of duplicate files consists of at least two files that have the same content. A single directory info string in</description></item><item><title>[Leetcode] Palindrome Pairs(Hard)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode336/</link><pubDate>Sat, 17 Sep 2022 20:41:48 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode336/</guid><description>LeetCode 336 - Palindrome Pairs Given a list of unique words, return all the pairs of the distinct indices (i, j) in the given list, so that the concatenation of the two words words[i] + words[j] is a palindrome. example Input: words = [&amp;#34;abcd&amp;#34;,&amp;#34;dcba&amp;#34;,&amp;#34;lls&amp;#34;,&amp;#34;s&amp;#34;,&amp;#34;sssll&amp;#34;] Output: [[0,1],[1,0],[3,2],[2,4]] Explanation: The palindromes are [&amp;#34;dcbaabcd&amp;#34;,&amp;#34;abcddcba&amp;#34;,&amp;#34;slls&amp;#34;,&amp;#34;llssssll&amp;#34;] Input: words = [&amp;#34;bat&amp;#34;,&amp;#34;tab&amp;#34;,&amp;#34;cat&amp;#34;] Output: [[0,1],[1,0]] Explanation: The palindromes are [&amp;#34;battab&amp;#34;,&amp;#34;tabbat&amp;#34;] How can we solve this problem? 在解</description></item><item><title>[Leetcode] Short Encoding of Words(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode802/</link><pubDate>Mon, 20 Jun 2022 12:45:05 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode802/</guid><description>820 - Short Encoding of Words A valid encoding of an array of words is any reference string s and array of indices indices such that: words.length == indices.length The reference string s ends with the '#' character. For each index indices[i], the substring of s starting from indices[i] and up to (but not including) the next '#' character is equal to words[i]. Given an array of words, return the</description></item><item><title>[Leetcode] Longest Palindromic Substring(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode5/</link><pubDate>Thu, 16 Jun 2022 14:09:50 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode5/</guid><description>LeetCode 5 - Longest Palindromic Substring Given a string s, return the longest palindromic substring in s. example Input: s = &amp;#34;babad&amp;#34; Output: &amp;#34;bab&amp;#34; Explanation: &amp;#34;aba&amp;#34; is also a valid answer. Input: s = &amp;#34;cbbd&amp;#34; Output: &amp;#34;bb&amp;#34; How can we solve this problem? 要解決這題，我們必須要先知道什麼是Palindrome</description></item><item><title>[筆記]Palindromic String(迴文字串)</title><link>https://ryantokmanmokmtm.github.io/post/palindromicstring/</link><pubDate>Thu, 16 Jun 2022 12:26:03 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/post/palindromicstring/</guid><description>Introduction 什麼是Palindromic String 迴文字串 所謂的Palindromic String(迴文字串) 就是以一個字元為中間，而它的左邊以及右邊的組成字</description></item><item><title>[Leetcode] Letter Combinations of a Phone Number(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode17/</link><pubDate>Mon, 09 May 2022 21:50:34 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode17/</guid><description>LeetCode 17 - Letter Combinations of a Phone Number Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order. A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters. example Input: digits = &amp;#34;23&amp;#34; Output: [&amp;#34;ad&amp;#34;,&amp;#34;ae&amp;#34;,&amp;#34;af&amp;#34;,&amp;#34;bd&amp;#34;,&amp;#34;be&amp;#34;,&amp;#34;bf&amp;#34;,&amp;#34;cd&amp;#34;,&amp;#34;ce&amp;#34;,&amp;#34;cf&amp;#34;] Input: digits = &amp;#34;&amp;#34; Output: []</description></item><item><title>[LeetCode] Remove All Adjacent Duplicates in String II(Medium)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode1209/</link><pubDate>Fri, 06 May 2022 21:19:25 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode1209/</guid><description>LeetCode 1209 - Remove All Adjacent Duplicates in String II You are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together. We repeatedly make k duplicate removals on s until we no longer can. Return the final string after all</description></item><item><title>[Leetcode] Backspace String Compare(Easy)</title><link>https://ryantokmanmokmtm.github.io/leetcodes/leetcode844/</link><pubDate>Sun, 01 May 2022 17:52:25 +0800</pubDate><guid>https://ryantokmanmokmtm.github.io/leetcodes/leetcode844/</guid><description>LeetCode 844 - Backspace String Compare Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character. Note that after backspacing an empty text, the text will continue empty. example: Input: s = &amp;#34;ab#c&amp;#34;, t = &amp;#34;ad#c&amp;#34; Output: true Explanation: Both s and t become &amp;#34;ac&amp;#34;. Input: s = &amp;#34;ab##&amp;#34;, t = &amp;#34;c#d#&amp;#34; Output: true Explanation:</description></item></channel></rss>